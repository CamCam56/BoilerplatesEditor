

Model:
	(contrainte=TypeContrainte | libre=TypeLibre)*;

TypeContrainte:
	(type='CONTRAINTE_EXIGENCE:' entity=EntityC)|(type='CONTRAINTE_BOILERPLATE:' entity=EntityC);

EntityC:
	(if=PrepConditionIf condition=Condition 'then' | preposition=PrepCondition condition=Condition)? article=Article
	systemName=SystemName v1=VerbShall (response=SystemResponse | 'process' object=Object details=Details | 'provide'
	whom=Whom 'with' 'the' 'ability' 'to' 'process' object=Object details=Details | 'be' 'able' 'to' 'process'
	object=Object details=Details) '.';

PrepConditionIf:
	IF='If';

Condition:
	condition=STRING;

SystemName:
	systemName=ID;

enum Article:
	theMAJ='The' | theMIN='the';

enum PrepCondition:
	WHEN='When' | WHILE='While' | WHERE='Where';

VerbShall:
	SHALL='shall';

SystemResponse:
	response=STRING;

Object:
	object=ID;

Details:
	details=STRING;

Whom:
	whom=ID;

TypeLibre:
	(type='LIBRE_EXIGENCE:' entity+=EntityL)|(type='LIBRE_BOILERPLATE:' entity+=EntityL);

EntityL:
	prepositions=Prepositions | verb1=Verbs1 | verb2=Verbs2 | subject=Subject | details=Details | '.';

Subject:
	subject=ID;

enum Prepositions:
	If='if' | When='when' | Where='where' | While='while' | Then='then' | The='the';

enum Verbs1:
	Shall='shall' | Should='should' | Will='will' | Obliged ="is obliged to" | Intend ="intends to do" | Must ='must' | Allow ='allows';
	
	enum Verbs2 :
	Provide = "provides with the ability to" | Process = 'processes' | Able = "is able to" ;	